{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x10ac333+65459]\n\tGetHandleVerifier [0x0x10ac374+65524]\n\t(No symbol) [0x0xecd973]\n\t(No symbol) [0x0xf176e7]\n\t(No symbol) [0x0xf17a8b]\n\t(No symbol) [0x0xf5dea2]\n\t(No symbol) [0x0xf39e44]\n\t(No symbol) [0x0xf5b606]\n\t(No symbol) [0x0xf39bf6]\n\t(No symbol) [0x0xf0b38e]\n\t(No symbol) [0x0xf0c274]\n\tGetHandleVerifier [0x0x132eda3+2697763]\n\tGetHandleVerifier [0x0x1329ec7+2677575]\n\tGetHandleVerifier [0x0x10d4194+228884]\n\tGetHandleVerifier [0x0x10c49f8+165496]\n\tGetHandleVerifier [0x0x10cb18d+192013]\n\tGetHandleVerifier [0x0x10b47d8+99416]\n\tGetHandleVerifier [0x0x10b4972+99826]\n\tGetHandleVerifier [0x0x109ebea+10346]\n\tBaseThreadInitThunk [0x0x765c5d49+25]\n\tRtlInitializeExceptionChain [0x0x7729d1ab+107]\n\tRtlGetAppContainerNamedObjectPath [0x0x7729d131+561]", "trace": "self = <test_login.TestLogin object at 0x0000018D108BFF10>\n\n    def test_login(self):\n        driver = self.driver\n        try:\n            driver.get(utils.URL)\n            login = LoginPage(driver)\n            login.enter_username(utils.USERNAME)\n            login.enter_password(utils.PASSWORD)\n            login.click_login()\n>           WebDriverWait(driver, 15).until(\n                ec.visibility_of_element_located((By.ID, \"dashboard\"))\n            )\n\ntests\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c45ba848f1fd00b2b443e9314e79b6a2\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000018D109B76A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x10ac333+65459]\nE       \tGetHandleVerifier [0x0x10ac374+65524]\nE       \t(No symbol) [0x0xecd973]\nE       \t(No symbol) [0x0xf176e7]\nE       \t(No symbol) [0x0xf17a8b]\nE       \t(No symbol) [0x0xf5dea2]\nE       \t(No symbol) [0x0xf39e44]\nE       \t(No symbol) [0x0xf5b606]\nE       \t(No symbol) [0x0xf39bf6]\nE       \t(No symbol) [0x0xf0b38e]\nE       \t(No symbol) [0x0xf0c274]\nE       \tGetHandleVerifier [0x0x132eda3+2697763]\nE       \tGetHandleVerifier [0x0x1329ec7+2677575]\nE       \tGetHandleVerifier [0x0x10d4194+228884]\nE       \tGetHandleVerifier [0x0x10c49f8+165496]\nE       \tGetHandleVerifier [0x0x10cb18d+192013]\nE       \tGetHandleVerifier [0x0x10b47d8+99416]\nE       \tGetHandleVerifier [0x0x10b4972+99826]\nE       \tGetHandleVerifier [0x0x109ebea+10346]\nE       \tBaseThreadInitThunk [0x0x765c5d49+25]\nE       \tRtlInitializeExceptionChain [0x0x7729d1ab+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x7729d131+561]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "stdout", "source": "3aa5597a-2319-4313-ab9e-fc09e85fde04-attachment.txt", "type": "text/plain"}], "start": 1759895592433, "stop": 1759895610785, "uuid": "66bb2b0d-96c7-41e4-98f8-758d80ab0d05", "historyId": "2116f0ad00ab1de0effc54f114dd9496", "testCaseId": "2116f0ad00ab1de0effc54f114dd9496", "fullName": "tests.test_login.TestLogin#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-EQ3CCLK"}, {"name": "thread", "value": "19568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py", "TestLogin"]}